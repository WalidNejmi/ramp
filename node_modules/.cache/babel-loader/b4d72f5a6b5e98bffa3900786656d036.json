{"ast":null,"code":"var _jsxFileName = \"/Users/walid/Desktop/Career/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { useCustomFetch } from \"hooks/useCustomFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch(); // State for approval states\n\n  const [approvalStates, setApprovalStates] = useState({});\n  useEffect(() => {\n    if (transactions) {\n      const initialApprovalStates = transactions.reduce((acc, transaction) => {\n        acc[transaction.id] = transaction.approved;\n        return acc;\n      }, {});\n      setApprovalStates(initialApprovalStates);\n    }\n  }, [transactions]);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n    setApprovalStates(prevStates => ({ ...prevStates,\n      [transactionId]: newValue\n    }));\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval,\n      isChecked: approvalStates[transaction.id]\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"IKu5Yx3wD7v9nuuSp8upEhwfAZY=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useEffect","TransactionPane","useCustomFetch","Transactions","transactions","fetchWithoutCache","loading","approvalStates","setApprovalStates","initialApprovalStates","reduce","acc","transaction","id","approved","setTransactionApproval","transactionId","newValue","value","prevStates","map"],"sources":["/Users/walid/Desktop/Career/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\"\nimport { SetTransactionApprovalParams } from \"utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\nimport { useCustomFetch } from \"hooks/useCustomFetch\"\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  \n  // State for approval states\n  const [approvalStates, setApprovalStates] = useState<Record<string, boolean>>({})\n\n\n  useEffect(() => {\n    if (transactions) {\n      const initialApprovalStates = transactions.reduce((acc, transaction) => {\n        acc[transaction.id] = transaction.approved\n        return acc\n      }, {} as Record<string, boolean>)\n      setApprovalStates(initialApprovalStates)\n    }\n  }, [transactions])\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n\n      setApprovalStates((prevStates) => ({\n        ...prevStates,\n        [transactionId]: newValue,\n      }))\n    },\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n          isChecked={approvalStates[transaction.id]}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCJ,cAAc,EAArD,CADuE,CAGvE;;EACA,MAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAA0B,EAA1B,CAApD;EAGAC,SAAS,CAAC,MAAM;IACd,IAAII,YAAJ,EAAkB;MAChB,MAAMK,qBAAqB,GAAGL,YAAY,CAACM,MAAb,CAAoB,CAACC,GAAD,EAAMC,WAAN,KAAsB;QACtED,GAAG,CAACC,WAAW,CAACC,EAAb,CAAH,GAAsBD,WAAW,CAACE,QAAlC;QACA,OAAOH,GAAP;MACD,CAH6B,EAG3B,EAH2B,CAA9B;MAIAH,iBAAiB,CAACC,qBAAD,CAAjB;IACD;EACF,CARQ,EAQN,CAACL,YAAD,CARM,CAAT;EAUA,MAAMW,sBAAsB,GAAGjB,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEkB,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMZ,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFW,aADoF;MAEpFE,KAAK,EAAED;IAF6E,CAA/D,CAAvB;IAKAT,iBAAiB,CAAEW,UAAD,KAAiB,EACjC,GAAGA,UAD8B;MAEjC,CAACH,aAAD,GAAiBC;IAFgB,CAAjB,CAAD,CAAjB;EAID,CAXuC,EAYxC,CAACZ,iBAAD,CAZwC,CAA1C;;EAeA,IAAID,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACgB,GAAb,CAAkBR,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEN,OAHX;MAIE,sBAAsB,EAAES,sBAJ1B;MAKE,SAAS,EAAER,cAAc,CAACK,WAAW,CAACC,EAAb;IAL3B,GACOD,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAjDM;;GAAMV,Y;UAC4BD,c;;;KAD5BC,Y"},"metadata":{},"sourceType":"module"}